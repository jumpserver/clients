appId: com.jumpserver.client
productName: 'JumpServerClient'
directories:
  buildResources: build
files:
  - '!**/.vscode/*'
  - '!src/*'
  - '!electron.vite.config.{js,ts,mjs,cjs}'
  - '!{.eslintignore,.eslintrc.cjs,.prettierignore,.prettierrc.cjs,dev-app-update.yml,CHANGELOG.md,README.md}'
  - '!{.env,.env.*,.npmrc,pnpm-lock.yaml}'
  - '!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}'
extraResources:
  - from: 'bin'
win:
  artifactName: JumpServer-Client-Installer-${os}-v${version}-${arch}.${ext}
  executableName: JumpServerClient
  icon: build/icons/icon.ico
  target:
    - target: nsis
      arch:
        - x64
        - ia32
    - target: msiWrapped
      arch:
        - x64
        - ia32
afterSign: build/sign/notarize.cjs
nsis:
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: always
  oneClick: false
  allowToChangeInstallationDirectory: true
  deleteAppDataOnUninstall: true
mac:
  entitlementsInherit: build/entitlements.mac.plist
  icon: build/icons/icon.icns
  notarize: true
  target:
    - target: dmg
      arch:
        - x64
        - arm64
dmg:
  artifactName: JumpServer-Client-Installer-${os}-v${version}-${arch}.${ext}
linux:
  icon: build/icons
  target:
    - target: deb
      arch:
        - x64
        - arm64
  maintainer: electronjs.org
  category: Utility
deb:
  artifactName: JumpServer-Client-Installer-${os}-v${version}-${arch}.${ext}
appImage:
  artifactName: JumpServer-Client-Installer-${os}-v${version}-${arch}.${ext}
npmRebuild: false
electronDownload:
  mirror: https://npmmirror.com/mirrors/electron/
protocols:
  - name: 'JumpServerClient Protocol'
    schemes: [ 'jms' ]
